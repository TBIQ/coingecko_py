# https://medium.com/@vanflymen/blazing-fast-ci-with-github-actions-poetry-black-and-pytest-9e74299dd4a5
name: Tests

on: [push]

jobs:

  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      # - name: Load cached venv
      #   id: cached-poetry-dependencies
      #   uses: actions/cache@v2
      #   with:
      #     path: .venv
      #     key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      #----------------------------------------------
      # code formatting quality check 
      #----------------------------------------------
      - name: Code Quality
        run: poetry run black . --check
      #----------------------------------------------
      # run tests 
      #----------------------------------------------
      - name: Test with pytest
        run: poetry run pytest ./tests --cov --cov-report xml:cov.xml

      #----------------------------------------------
      # Extract test code coverage and branch info 
      # https://dev.to/thejaredwilcurt/coverage-badge-with-github-actions-finally-59fa
      #----------------------------------------------
      - name: Extract Code Coverage 
        run: |
          # get current git branch 
          REF=${{ github.ref }}
          echo "github.ref: $REF"
          IFS='/' read -ra PATHS <<< "$REF"
          BRANCH_NAME="${PATHS[1]}_${PATHS[2]}"
          echo "BRANCH=$(echo ${BRANCH_NAME})" >> $GITHUB_ENV

          # get coverage percent and color 
          COVERAGE=$(poetry run get_cov)%
          COV_COLOR=$(poetry run get_cov_color)
          COV_FILE=py_coingecko__${{ env.BRANCH }}.json
          echo "COVERAGE=$COVERAGE" >> $GITHUB_ENV
          echo "COV_COLOR=$COV_COLOR" >> $GITHUB_ENV
          echo "COV_FILE=$COV_FILE" >> $GITHUB_ENV

          # log environment values 
          echo "git branch: $BRANCH_NAME"
          echo "cov badge filename: $COV_FILE"
          echo "cov badge percent: $COVERAGE"
          echo "cov badge color: $COV_COLOR"

      #----------------------------------------------
      # create code cov badge
      # https://github.com/marketplace/actions/dynamic-badges
      #----------------------------------------------
      - name: Create Code Coverage Badge
        uses: schneegans/dynamic-badges-action@v1.1.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: e454b900fe6518d21bdd25c9508d8a64
          filename: ${{ env.COV_FILE }}
          label: Pytest Coverage
          message: ${{ env.COVERAGE }}
          color: ${{ env.COV_COLOR }}
          namedLogo: pytest 